{"version":3,"sources":["script.js"],"names":["username","prompt","ably","Ably","Realtime","channel","channels","get","users","messages","messageInput","document","getElementById","sendButton","chatMessages","userList","userStatus","userSelect","sendMessage","message","value","trim","publish","user","text","time","Date","toLocaleTimeString","subscribe","msg","msgElement","createElement","innerHTML","data","appendChild","scrollTop","scrollHeight","action","push","filter","updateUserList","updateUserStatus","forEach","userItem","textContent","addEventListener","selectedUser","to","from","initializeUser","e","key"],"mappings":"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","sourcesContent":["// Initialize variables\r\nlet username = prompt(\"Enter your username:\");\r\nlet ably = new Ably.Realtime('knH84g.xyERFQ:_YgFb-hkCXQNM2gCyRhIt2Q0NWuKd2JmfNhLZILR7DE');\r\nlet channel = ably.channels.get('chat-room');\r\n\r\n// Arrays to store users and messages\r\nlet users = [];\r\nlet messages = [];\r\n\r\n// DOM Elements\r\nlet messageInput = document.getElementById('message-input');\r\nlet sendButton = document.getElementById('send-button');\r\nlet chatMessages = document.getElementById('chat-messages');\r\nlet userList = document.getElementById('user-list');\r\nlet userStatus = document.getElementById('user-status');\r\nlet userSelect = document.getElementById('user-select');\r\n\r\n// Send message to channel\r\nfunction sendMessage() {\r\n    let message = messageInput.value.trim();\r\n    if (message !== \"\") {\r\n        channel.publish('message', { user: username, text: message, time: new Date().toLocaleTimeString() });\r\n        messageInput.value = '';\r\n    }\r\n}\r\n\r\n// Handle new messages\r\nchannel.subscribe('message', (msg) => {\r\n    let msgElement = document.createElement('div');\r\n    msgElement.innerHTML = `<strong>${msg.data.user}</strong> [${msg.data.time}]: ${msg.data.text}`;\r\n    chatMessages.appendChild(msgElement);\r\n    chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to the bottom\r\n});\r\n\r\n// Handle user joining and leaving\r\nchannel.subscribe('user-action', (msg) => {\r\n    if (msg.data.action === 'join') {\r\n        users.push(msg.data.username);\r\n    } else if (msg.data.action === 'leave') {\r\n        users = users.filter(user => user !== msg.data.username);\r\n    }\r\n    updateUserList();\r\n    updateUserStatus(msg.data.action, msg.data.username);\r\n});\r\n\r\n// Update the list of available users\r\nfunction updateUserList() {\r\n    userList.innerHTML = '';\r\n    users.forEach(user => {\r\n        let userItem = document.createElement('li');\r\n        userItem.textContent = user;\r\n        userList.appendChild(userItem);\r\n    });\r\n}\r\n\r\n// Update the user status when someone joins or leaves\r\nfunction updateUserStatus(action, username) {\r\n    if (action === 'join') {\r\n        userStatus.textContent = `${username} has joined the chat.`;\r\n    } else if (action === 'leave') {\r\n        userStatus.textContent = `${username} has left the chat.`;\r\n    }\r\n}\r\n\r\n// Handle private message\r\nuserSelect.addEventListener('change', () => {\r\n    let selectedUser = userSelect.value;\r\n    if (selectedUser) {\r\n        channel.publish('private-message', { to: selectedUser, from: username, text: 'Private message initiated' });\r\n    }\r\n});\r\n\r\n// Initialize the user and notify others of joining\r\nfunction initializeUser() {\r\n    channel.publish('user-action', { action: 'join', username: username });\r\n    users.push(username);\r\n    updateUserList();\r\n}\r\n\r\n// Listen for when a user joins or leaves the chat\r\ninitializeUser();\r\n\r\n// Add event listener to send button\r\nsendButton.addEventListener('click', sendMessage);\r\n\r\n// Add event listener for enter key to send message\r\nmessageInput.addEventListener('keypress', (e) => {\r\n    if (e.key === 'Enter') {\r\n        sendMessage();\r\n    }\r\n});\r\n"],"file":"script.dev.js"}